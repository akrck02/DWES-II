---------------------------------------------
  DATES
---------------------------------------------
<?php 
    /**
     * Set timezone my espanita (up)
     */
    date_default_timezone_set('Europe/Madrid');

    /**
     * php Datetime format chars
     */
    define("FORMATS", [
        "AM_PM"         => "A",
        "MILLISECONDS"  => "v",
        "SECONDS"       => "s",
        "MINUTES"       => "i",
        "HOUR_12"       => "h",
        "HOUR_24"       => "H",
        "DAY"           => "d",
        "DAY_TEXT"      => "l",
        "MONTH"         => "m",
        "MONTH_TEXT"    => "F",
        "YEAR"          => "Y"
    ]);

    /**
     * Get formated date
     * @param string $datestr   The  date string
     * @param string $format    The format to apply
     * @return string           The formated date
     */
    function getFormatedDate($datestr,$format){
        $date = new Datetime($datestr);
        return $date->format($format);
    }

    /**
     * Get difference between two dates
     * @param Datetime $date a date
     * @param Datetime $other other date
     */
    function getDiff($date , $other) {
        $diff = $date -> diff($other); 

        $yearDiff = $diff -> y;
        $monthDiff = $diff -> m;
        $DaysDiff =  $diff -> d;
        $hourDiff = $diff -> h;
    }
    

    /**
     * Comparing dates
     */
     $dateOne = new DateTime();
     $dateOther = new DateTime();

     $bigger = $dateOne > $dateOther;



?>
---------------------------------------------
  ARRAYS
---------------------------------------------
<?php 
    // Getting array random keys    
    $array = [];
    $max = 10;
    $randomKeys = array_rand($array,$max);

    // Getting array values
    $values = array_values($array);

    // Getting array keys 
    $keys = array_keys($array);

    // Shuffle array
    shuffle($array);

    // If key exists
    $existKey = array_key_exists("cosa", ["cosa" => 0]);

    // slice 
    $slice = array_slice([],$min,$max);

?>
---------------------------------------------
  STRINGS
---------------------------------------------
<?php
    $input = "fino";
    
    $length = strlen($input);
    $replace = str_replace(["A","B"],["c","d"],$input);
    $repeat = str_repeat("x",10);
    $uppercase = strtoupper($input);
    $trimmed = trim($input);

    //CAST
    $int = intval($input);
    $double = doubleval($input);
    $numeric = is_numeric($input);
    $empty = empty($input);
    
    // JOIN AND DRAG
    $exploded = explode(";",$input);
    $joined = join(",",[]);

    // ASCII
    $ord = ord("a");    // int value form "a"
    $ord = chr(65);     // char for 65
?>
---------------------------------------------
  FILES
---------------------------------------------
<?php
    // If file exists deleted
    if(file_exists("fino.php"))          
        unlink("fino.php");               

    // Create directory
    mkdir("fino");   

    // if dir exists remove
    if(is_dir("fino"));                 
        rmdir("fino");                 

    
    /**
     * add a line to file
     * @param string $url The directory
     * @param string $content The line to add
     * @return if the line was added
     */
    function addLineToFile($url = "./", ...$content)
    {

        if (!is_dir(dirname($url)))
            mkdir(dirname($url), 0777, true);

        $file = fopen($url, "a+");
        if ($file != false) {
            foreach ($content as $line) {
                if(is_array($line))
                    fwrite($file, implode(" ", $line) . " ");
                else
                    fwrite($file, $line . " ");
            }
            fwrite($file, "\n");
            fclose($file);
        } else return false;

        return true;
    }

    // read files 
    if(file_exists("./fino.txt"))
    {
        $f = fopen("./fino.txt", "r");
        while(!feof($f)) 
            $linea = fgets($f); 
        fclose($f);
    }

?>
---------------------------------------------
  SESSIONS
---------------------------------------------
<?php 

    //start session
    session_start();

    // erase one session variable
    unset($_SESSION['properties']);

    //delete session all variables
    session_unset();

    //destroy session
    session_destroy();

    //Cookie
    setcookie($name,$value,$expire);
?>
---------------------------------------------
  FORMS
---------------------------------------------
<?php

//  $select = $_POST['select'];
//  $check = $_POST['check'];
//  $radio = $_POST['radio'];


    # Upload an image
    if(isset($_POST['submit'])){
            if(isset($_FILES['file'])){
                $file = $_FILES['file'];
                if($file['size'] > 0){
                    if (move_uploaded_file($file['tmp_name'], "./".$file['name'])) {
                       echo "<h1 style='color:green'>Done.</h1>";
                    }
                }else $uploadError = "No se pudo subir la imagen";
            }
    } else $uploadError = "file does not exist";
    
?>

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>

<body>
    <form action="<?= $_SERVER['PHP_SELF'] ?>" enctype="multipart/form-data" method="post">

        <select name="select" id="">
            <option value="">1</option>
            <option value="">2</option>
        </select>

        <input type="checkbox" name="check[]" value="0" id="">
        <input type="checkbox" name="check[]" value="1" id="">

        <input type="radio" name="radio" id="">
        <input type="radio" name="radio" id="">

        <input type="file" name="file" id="">
        <input type="submit" value="Click" name='submit'>
    </form>
</body>

</html>
---------------------------------------------
  DATABASE
---------------------------------------------
<?php 

    //Database info
    date_default_timezone_set("Europe/Madrid");
    define("DB_HOST" , "localhost");
    define("DB_USER" , "root");
    define("DB_PASSWORD" , "");
    define("DB" , "subastas");

    /**
     * Connect to the database
     * @return mysqli The database connection
     */
    function connectDB()
    {
        $conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB);
        mysqli_set_charset($conn, "UTF8");
        return $conn;
    }

    /**
     * Get items from an specific categories
     * @param mysqli $conn      The database connection
     * @param int $category     The category id to search for
     * @return array            The items from the category
     */
    function getItemsFromCategory($conn, $category)
    {

        $items = [];
        $sql = "SELECT * FROM ITEM";

        if ($category != "all") {
            $sql = "SELECT * FROM ITEM WHERE id_cat=?";
            $statement = $conn->prepare($sql);

            if($statement === false)
                return $items;

            $prepared = $statement->bind_param("i", $category);
        } else {
            $statement = $conn->prepare($sql);

            if($statement === false)
                return $items;

            $prepared = true;
        }

        $executed = $statement->execute();

        if ($prepared and $executed) {

            $result = $statement->get_result();
            while ($item = $result->fetch_assoc()) {
                $items[] = $item;
            }
        }

        $statement->close();
        return $items;
    }


    /**
     * Update item
     * @param mysqli $conn      The database connection
     * @param int $id           The item id
     * @param double $price     The new item price 
     * @param string $date      The new expiration date
     * @return boolean          If the item was updated
     */
    function updateItem($conn,$id,$price,$date){
        $sql = "UPDATE item SET precio_partida=?, fechafin=? WHERE id=?";
    
        $statement = $conn->prepare($sql);

        if($statement === false)
            return false;

        $prepared = $statement->bind_param("dsi", floatval($price),$date,intval($id));
        $executed = $statement->execute();

        return $prepared and $executed;
    }

    
    /** 
     * Insert image in the database 
     * @param mysqli $conn  The database connection
     * @param int $item     The image owner 
     * @param int $image    The image id 
     * @return boolean      If the image was upload
     **/
    function newImage($conn,$item,$image)
    {
        $sql = "INSERT INTO imagen(id_item,imagen) VALUES(?,?)";

        $statement = $conn->prepare($sql);
    
        if($statement === false)
            return false;

        $prepared = $statement->bind_param("is", intval($item), $image);
        $executed = $statement->execute();
        $statement->close();


        return $prepared and $executed;
    }


    /**
     * Get expired items
     * @param mysqli $conn  The database connection
     * @return array        The expired items
     */
    function  getExpiredItems($conn){
        $items = [];
        $sql = "select * from item where TIMESTAMPDIFF(SECOND, fechafin, now()) > 1";
        
        $statement = $conn->prepare($sql);

        if($statement === false)
            return $items;

        $prepared = true;
        $executed = $statement->execute();

        if ($prepared and $executed) {

            $result = $statement->get_result();
            while ($item = $result->fetch_assoc()) {
                $items[] = $item;
            }
        }

        $statement->close();
        return $items;
    }

?>
